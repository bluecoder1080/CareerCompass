version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: careercompass-mongo-prod
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: careercompass
    volumes:
      - mongodb_data_prod:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - careercompass-network
    # Don't expose port in production - only internal access

  redis:
    image: redis:7.2-alpine
    container_name: careercompass-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data_prod:/data
    networks:
      - careercompass-network
    # Don't expose port in production - only internal access

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: careercompass-backend-prod
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/careercompass?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - GEMMA_API_KEY=${GEMMA_API_KEY}
      - GEMMA_API_URL=${GEMMA_API_URL}
      - HF_TOKEN=${HF_TOKEN}
      - VERTEX_PROJECT_ID=${VERTEX_PROJECT_ID}
      - VERTEX_LOCATION=${VERTEX_LOCATION}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - careercompass-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
    container_name: careercompass-frontend-prod
    restart: unless-stopped
    ports:
      - "80:3000"
    depends_on:
      - backend
    networks:
      - careercompass-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    container_name: careercompass-worker-prod
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/careercompass?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - mongodb
      - redis
    networks:
      - careercompass-network

  # Reverse proxy for production (optional)
  nginx:
    image: nginx:alpine
    container_name: careercompass-nginx-prod
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - careercompass-network

volumes:
  mongodb_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  careercompass-network:
    driver: bridge
